@viewModel oostfraeiskorg.ViewModels.TranslatorViewModel, oostfraeiskorg
@masterPage Views/MasterPage.dotmaster
@js translator

<dot:Content ContentPlaceHolderID="MainContent">
    <dot:NamedCommand Name="TranslateAsync"
                      Command="{command: _root.TranslateAsync()}" />
    <dot:NamedCommand Name="PrepareTranslation"
                      Command="{command: _root.PrepareTranslation()}" />
    <dot:NamedCommand Name="DeactivateFeedback"
                      Command="{command: _root.DeactivateFeedback()}" />

    <style>

        .translation-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            align-items: stretch;
            gap: 20px;
            padding: 1rem;
        }

        .translation-wrapper {
            display: flex;
            flex: 1;
            flex-wrap: wrap;
            justify-content: center;
            gap: 20px;
            width: 100%;
            height: 100%;
        }

        .translation-box {
            flex: 1 1 45%;
            min-width: 200px;
            display: flex;
            flex-direction: column;
            background: #f9f9f9;
            border-radius: 1rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            padding: 1rem;
            height: 100%;
            min-height: 100px; /* NEW: Ensures both boxes have a consistent minimum height */
        }

        .input-wrapper {
            position: relative;
            flex-grow: 1;
            display: flex;
            flex-direction: column;
        }

        /* Match the spinner container height */
        .loading-spinner {
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100%;
            min-height: 200px; /* NEW: Ensure spinner matches textbox height */
            background: #fff;
            border-radius: 0.5rem;
            box-shadow: inset 0 0 5px rgba(0,0,0,0.1);
        }

        .input-box.form-control {
            flex-grow: 1;
            border: none;
            background-color: #fff;
            box-shadow: inset 0 0 5px rgba(0,0,0,0.1);
            border-radius: 0.5rem;
            padding: 1rem;
            font-size: 1rem;
            resize: none;
            min-height: 200px;
            height: auto;
        }

        .button-box {
            display: flex;
            justify-content: center;
            gap: 1rem;
            align-items: center;
            padding: 0.25rem;
        }

        .translation-box h5 {
            text-align: center;
            margin-bottom: 1rem;
            font-weight: 600;
        }

        .btn-success {
            padding: 0.3rem 0.6rem;
            border-radius: 0.5rem;
            font-weight: 600;
        }

        .btn-danger {
            padding: 0.3rem 0.6rem;
            border-radius: 0.5rem;
            font-weight: 600;
        }

        .btn-primary {
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            font-weight: 600;
        }

        .switch-button {
            font-weight: 2000;
        }

        .spinner {
            width: 2rem;
            height: 2rem;
            border: 4px solid #ccc;
            border-top: 4px solid #007bff;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        .char-count-inline {
            position: absolute;
            bottom: 8px;
            right: 12px;
            font-size: 0.75rem;
            color: #888;
            pointer-events: none;
            background: rgba(255,255,255,0.8);
            padding: 2px 4px;
            border-radius: 4px;
        }

        .overlay-content {
            display: flow;
            position: relative;
            bottom: 0px;
            left: 0px;
            background-color: rgba(255, 255, 255, 0.8);
            padding: 2px;
            border-radius: 5px;
            opacity: 0;
            transition: opacity 0.5s ease-in-out;
        }

            .overlay-content.show {
                opacity: 0.8;
            }

            .overlay-content button {
                margin: 0 5px;
            }

        /* RESPONSIVE - stack on small screens */
        @media (max-width: 768px) {
            .translation-container {
                height: auto;
                flex-direction: column;
                overflow: auto;
                gap: 0px;
                padding: 0 0rem;
            }

            .translation-box {
                height: auto;
                padding: 0.75rem;
            }

            body {
                overflow: auto; /* Allow scrolling on mobile */
            }

            .translation-wrapper {
                gap: 5px;
            }

            .beta-text {
                font-size: 0.75rem;
            }

            h2 {
                font-size: 1.75rem;
            }

            .input-box.form-control {
                height: 120px; /* FIX: Match desktop for visual consistency */
                min-height: 120px;
            }

            .loading-spinner {
                min-height: 120px; /* FIX: Equal height to the textboxes on mobile */
            }

            .btn-primary {
                padding: 0.5rem 1.0rem;
                border-radius: 0.5rem;
                font-weight: 600;
            }

            .overlay-content {
                display: block;
                font-size: 0.95rem;
            }

            .btn-success {
                padding: 0.2rem 0.4rem;
                border-radius: 0.5rem;
                font-weight: 600;
            }

            .btn-danger {
                padding: 0.2rem 0.4rem;
                border-radius: 0.5rem;
                font-weight: 600;
            }
        }
    </style>

    <h2 class="text-center mt-3">Ooversetter</h2>
    <p class="text-center">(Beta-Version)</p>
    <p class="beta-text text-center">Der Übersetzer befindet sich noch in der Beta-Phase. Übersetzungen können fehlerhaft sein.</p>

    <div class="translation-container">

        <div class="translation-wrapper">
            <!-- German Input -->
            <div class="translation-box">
                <h5>
                    <dot:Literal Text="{value: InputTitle}" />
                </h5>
                <div class="input-wrapper">
                    <dot:TextBox Text="{value: GermanText}" Type="MultiLine" id="input"
                                 class="form-control input-box"
                                 placeholder="Hier einen deutschen Text eingeben."
                                 maxlength="{value: MaximumTextLength}" />
                    <span id="charCount" class="char-count-inline">
                        0/
                        <dot:Literal Text="{value: MaximumTextLength}" />
                    </span>
                </div>
                <!-- Buttons -->
                <div class="button-box">
                    <dot:Button Text="Übersetze" Click="{staticCommand: _js.InvokeAsync('StartTranslation')}" class="btn btn-primary" />
                    <dot:Button Text="↻" Click="{command: SwitchTranslationMode()}" style="{value: DoubleTranslationEnabled ? '' : 'display: none'}" class="btn btn-primary switch-button" />
                </div>
            </div>

            <!-- East Frisian Output -->
            <div class="translation-box">
                <h5>
                    <dot:Literal Text="{value: TranslationTitle}" />
                </h5>
                <div class="input-wrapper">
                    <dot:TextBox Text="{value: EastFrisianText}" Type="MultiLine" Enabled="false" id="translation"
                                 class="form-control input-box"
                                 placeholder="Hir staajt däi ooverset't oostfräisk tekst."
                                 Visible="{value: !IsLoading}" />
                    <div class="loading-spinner" Visible="{value: IsLoading}">
                        <div class="spinner"></div>
                    </div>
                </div>

                <!-- Feedback -->
                <div class="{value: ShowTranslationFeedback ? 'overlay-content text-center show' : 'overlay-content text-center'}">
                    <span>War die Übersetzung richtig?</span>
                    <div>
                        <dot:Button Text="✔" Click="{command: ReportTranslationSuccess()}" class="btn btn-success mx-2" />
                        <dot:Button Text="✘" Click="{command: ReportTranslationIssue()}" class="btn btn-danger mx-2" />
                    </div>
                </div>
            </div>
        </div>
    </div>

</dot:Content>